% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributions-approximated.R
\name{negative_bin}
\alias{negative_bin}
\title{The negative binomial distribution}
\source{
In order to calculate a fitting cutoff, the quantile function
\code{\link[stats:NegBinomial]{stats::qnbinom()}} is used. \code{\link[stats:NegBinomial]{stats::dnbinom()}} is then employed to calculate
the distribution.
}
\usage{
negative_bin(r, p, eps = 1e-10, normalize = TRUE)
}
\arguments{
\item{r}{A positive number, the number of successes until the experiment is
stopped.}

\item{p}{A number between 0 and 1, the success probability in each experiment.}

\item{eps}{A positive number, how close the distribution is approximated.
See ‘Details.’ (default: \code{1e-10})}

\item{normalize}{Logical, whether to normalize the approximated distribution.
(default: TRUE)}
}
\value{
A \code{ddf} distribution as described above.
}
\description{
Create a \code{ddf} object for the negative binomial distribution with the given
parameters.
}
\details{
The negative binomial distribution models the number of failures in a
sequence of iid Bernoulli trials (see also \code{\link[=bernoulli]{bernoulli()}}) with common success
probability \eqn{p}, before a specified number \eqn{r} of successes occurs.

It has support \eqn{\mathbb{N}_0} on which its probability mass function is
given by
\deqn{p(k) = \binom{k+r-1}{k} (1-p)^k p^r.}
Note how the second parameter \eqn{r} can be generalized to arbitrary
positive reals which the currently documented function also does.

As the negative binomial distribution has countably infinite support and
this package only works with discrete distributions with finite support, the
resulting \code{ddf} object can only approximate the negative binomial
distribution.

For this, the support is cut off at a large enough integer such that the
overall probability is still close to 1.
The cutoff is controlled via the \code{eps} argument which specifies how close the
sum of all probabilities has to be to 1. The default value is \code{1e-10} since
this is also the minimum accuracy required for creating valid \code{ddf} objects.

By default, i.e. unless \code{normalize} is set to \code{FALSE}, the specified accuracy
won't raise any problems even when being larger than \code{1e-10} as the
approximation is normalized at the end (that is, the approximating
probabilities are divided by their sum).
This ensures that the returned object is an actual distribution with its
overall probability being precisely one.
}
\examples{
# 'r' does not have to be an integer
negative_bin(2.25, 0.95)
# A more accurate approximation of the same distribution
negative_bin(2.25, 0.95, 1e-12)
}
\seealso{
Other distributions: 
\code{\link{benford}()},
\code{\link{bernoulli}()},
\code{\link{beta_binomial}()},
\code{\link{bin}()},
\code{\link{geometric}()},
\code{\link{hypergeometric}()},
\code{\link{negative_hypergeometric}()},
\code{\link{pois}()},
\code{\link{rademacher}()},
\code{\link{unif}()},
\code{\link{zipf}()}
}
\concept{distributions}
